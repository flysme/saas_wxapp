<!--
 * @Description: 
 * @Author: zhaofeixiang
 * @LastEditors: zhaofeixiang
 * @Date: 2019-03-01 18:06:22
 * @LastEditTime: 2019-05-05 11:02:37
 -->
<style lang="scss">
page{
  background-color: #efefef;
}
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}

@for $i from 7 through 24 {
  .f-#{$i} { font-size: 2rpx * $i; }
}

@each $i in 400, 500 {
   .font-weight-#{$i} { font-weight: $i;}
} 

@each $key in fixed, relative,absolute {
   .#{$key} { position: $key;}
} 

.sys-flex{
  display: flex;
}

.sys-flex-one{
  flex: 1;
}

.mr-0{
  margin-right: 0!important;
}

button{
  padding: 0;
  &::after {
        border: none
  }
}

</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import { setStore } from 'wepy-redux'
import configStore from './store'
import  UTILS from '@/utils/utils' // 本地缓存
// import * as Sentry from 'sentry/browser';
const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/select_ticket/select_ticket',
      'pages/watch_ticket/watch_ticket',
      'pages/choose_date/choose_date',
      'pages/ticket/ticket',
      'pages/choose_city/choose_city',
      'pages/home/home',
      'pages/store_detail/store_detail',
      'pages/login/login',
      'pages/index/index',
      'pages/ticket_detail/ticket_detail',
      'pages/order/order',
    ],
    tabBar: {
      color:'#515151',
      selectedColor:"#f44444",
      list:[
        {
          pagePath:'pages/select_ticket/select_ticket',
          text:'首页',
          iconPath:'static/images/tab/home_normal.png',
          selectedIconPath:'static/images/tab/home_selected.png'
        },
        {
          pagePath:'pages/watch_ticket/watch_ticket',
          text:'监控',
          iconPath:'static/images/tab/watch_normal.png',
          selectedIconPath:'static/images/tab/watch_selected.png'
        }
      ]
    },
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      enablePullDownRefresh:true,
      navigationBarTextStyle: 'black'
    },
    permission: {
      "scope.userLocation": {
        "desc": "你的位置信息将用于小程序位置使用"
      }
    }
  }

  globalData = {
    userInfo: null,
    checkIsIOS:false,
    is_Login:false
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    // this.testAsync()
    this.globalData.checkIsIOS = wx.getSystemInfoSync().system.indexOf('iOS') > -1;
    this.checkSession(); //检查session是否过期
  }
  onShow () {
    this.updateManger();
  }
  updateManger () {
    const updateManager = wx.getUpdateManager()

        updateManager.onCheckForUpdate(function (res) {
          // 请求完新版本信息的回调
          console.log(res.hasUpdate)
        })

        updateManager.onUpdateReady(function () {
          wx.showModal({
            title: '更新提示',
            content: '新版本已经准备好，是否重启应用？',
            success(res) {
              if (res.confirm) {
                // 新的版本已经下载好，调用 applyUpdate 应用新版本并重启
                updateManager.applyUpdate()
              }
            }
          })
        })

        updateManager.onUpdateFailed(function () {
          // 新版本下载失败
        })
  }
  checkSession () {
    wx.checkSession({
      fail () {
        UTILS.StorageSync.remove('sessionid');
      }
    });
  }
  // sleep (s) {
  //   return new Promise((resolve, reject) => {
  //     setTimeout(() => {
  //       resolve('promise resolved')
  //     }, s * 1000)
  //   })
  // }

  // async testAsync () {
  //   const data = await this.sleep(3)
  //   console.log(data)
  // }
  // getUserInfo(cb) {
  //   const that = this
  //   if (this.globalData.userInfo) {
  //     return this.globalData.userInfo
  //   }
  //   wepy.getUserInfo({
  //     success (res) {
  //       that.globalData.userInfo = res.userInfo
  //       cb && cb(res.userInfo)
  //     }
  //   })
  // }
}
</script>
